{"version":3,"sources":["components/auth/context.js","components/auth/login.js","hooks/form.js","conText/settings.js","components/List/list.js","components/todo/todo.js","components/navBar/navBar.js","app.js","index.js"],"names":["LoginContext","React","createContext","LoginProvider","props","useState","loginStatus","setLoginStatus","username","JSON","parse","localStorage","getItem","capabilities","user","setUser","error","setError","useEffect","loginFunction","password","superagent","post","set","base64","encode","response","validateMyUser","body","console","log","token","jwt","decode","setItem","stringify","state","logoutFunction","window","location","reload","clear","Provider","value","children","Login","changeHandler","e","setState","target","name","submitHandler","preventDefault","context","condition","this","className","onSubmit","type","placeholder","onChange","Component","contextType","useForm","callback","defaultValues","values","setValues","handleSubmit","event","handleChange","persist","parseInt","SettingsContext","Settings","postperPagefromlocal","showComplete","setShowComplete","numOfitems","setnumOfitems","currentPage","setpagenum","complete","setcomplete","pagevisited","Settingsdata","showcom","setcomp","lastpage","Lists","totalposts","useContext","pages","i","Math","ceil","push","map","page","index","onClick","ToDo","list","setList","incomplete","setIncomplete","authcontext","difficulty","item","id","uuid","incompleteCount","filter","length","document","title","tagetedd","includes","htmlFor","defaultValue","min","max","text","setcomps","slice","assignee","toString","items","toggleComplete","deleteItem","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.318a734d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport superagent from \"superagent\";\nimport base64 from \"base-64\";\nimport jwt from \"jsonwebtoken\";\nexport const SettingsContext = React.createContext();\nexport const LoginContext = React.createContext();\nconst API = `https://auth-api-ahmadijmail.herokuapp.com/signin`;\nexport default function LoginProvider(props) {\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const [user, setUser] = useState({\n    username: JSON.parse(localStorage.getItem(\"username\")) || \"\",\n    capabilities: JSON.parse(localStorage.getItem(\"capabilities\")) || [],\n  });\n  const [error, setError] = useState();\n  useEffect(() => {\n    const tokenFromCookies = JSON.parse(localStorage.getItem(\"token\"));\n    if (tokenFromCookies) {\n      setLoginStatus(true);\n\n      setUser(user);\n    } else {\n      setLoginStatus(false);\n      // setUser({});\n    }\n  }, []);\n  const loginFunction = async (username, password) => {\n    try {\n      const response = await superagent\n        .post(`${API}`)\n        .set(\n          \"authorization\",\n          `Basic ${base64.encode(`${username}:${password}`)}`\n        );\n\n      validateMyUser(response.body.user);\n\n      setUser(response.body.user);\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n  const logoutFunction = () => {\n    setLoginStatus(false);\n    window.location.reload();\n    setUser({});\n    localStorage.clear(\"token\");\n    localStorage.clear(\"actions\");\n    localStorage.clear(\"username\");\n  };\n\n  const validateMyUser = (user) => {\n    if (user.token) {\n      const userFromToken = jwt.decode(user.token);\n\n      setLoginStatus(true);\n      //setUser(user);\n      localStorage.setItem(\"token\", JSON.stringify(user.token));\n\n      localStorage.setItem(\"username\", JSON.stringify(user.username));\n\n      localStorage.setItem(\"capabilities\", JSON.stringify(user.capabilities));\n    } else {\n      setLoginStatus(false);\n      setUser({});\n    }\n  };\n\n  const state = {\n    loginStatus: loginStatus,\n    loginFunction: loginFunction,\n    logoutFunction: logoutFunction,\n    user: user,\n    error: error,\n  };\n  return (\n    <LoginContext.Provider value={state}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { When } from \"react-if\";\nimport { LoginContext } from \"./context\";\nimport \"./login.scss\";\nexport default class Login extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n  changeHandler = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.context.loginFunction(this.state.username, this.state.password);\n  };\n  render() {\n    return (\n      <>\n        <When condition={!this.context.loginStatus}>\n          <form className=\"login\" onSubmit={this.submitHandler}>\n            <input\n              type=\"text\"\n              placeholder=\"user name\"\n              name=\"username\"\n              onChange={this.changeHandler}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              name=\"password\"\n              onChange={this.changeHandler}\n            />\n            <button>Login</button>\n            {this.context.error?<label>UserName or password is not correct</label>:null}  \n          </form>\n        </When>\n       \n      </>\n    );\n  }\n}","import { useState, useEffect } from 'react';\n\nconst useForm = (callback, defaultValues={}) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n\n    let { name, value } = event.target;\n    if (parseInt(value)) {\n      value = parseInt(value);\n    }\n\n    setValues(values => ({ ...values, [name]: value }));\n  };\n\n  useEffect( () => {\n    setValues( defaultValues );\n  }, [defaultValues]);\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nexport const SettingsContext = React.createContext();\r\n\r\nexport function Settings(props) {\r\n  const postperPagefromlocal = JSON.parse(localStorage.getItem(\"iTemsPerPage\"));\r\n  const [showComplete, setShowComplete] = useState(\"false\");\r\n  const [numOfitems, setnumOfitems] = useState(\r\n    postperPagefromlocal ? postperPagefromlocal : 3\r\n  );\r\n  const [currentPage, setpagenum] = useState(1);\r\n  let [complete, setcomplete] = useState();\r\n  let [showcom, setcomp] = useState(false);\r\n  const pagevisited = currentPage * numOfitems;\r\n  const lastpage = pagevisited - numOfitems;\r\n  const Settingsdata = {\r\n    showcom: showcom,\r\n    setcomp: setcomp,\r\n    complete: complete,\r\n    setcomplete: setcomplete,\r\n    lastpage: lastpage,\r\n    pagevisited: pagevisited,\r\n    currentPage: currentPage,\r\n    setpagenum: setpagenum,\r\n    showComplete: showComplete,\r\n    setShowComplete: setShowComplete,\r\n    numOfitems: numOfitems,\r\n    setnumOfitems: setnumOfitems,\r\n  };\r\n\r\n  useEffect(() => {}, [numOfitems]);\r\n\r\n  return (\r\n    <SettingsContext.Provider value={Settingsdata}>\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SettingsContext;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport \"./list.scss\"\r\nimport SettingsContext from \"../../conText/settings\";\r\nconst Lists = ({ totalposts }) => {\r\n  const Settingsdata = useContext(SettingsContext);\r\n  \r\n  const pages = [];\r\n  const postperPagefromlocal=JSON.parse(localStorage.getItem(\"iTemsPerPage\"))\r\n\r\n  //without Stoarge\r\n // for (let i = 1; i <= Math.ceil(totalposts / postperPage); i++) { \r\n\r\n\r\n //with Stoarge \r\n  for (let i = 1; i <= Math.ceil(totalposts / postperPagefromlocal); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {pages.map((page, index) => {\r\n        return <button key={index} onClick={()=>{\r\n          Settingsdata.setpagenum(page)\r\n        }} className={page ==Settingsdata.currentPage?\"active\":\"\"}>{page}</button>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Lists;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport SettingsContext from \"../../conText/settings\";\nimport { v4 as uuid } from \"uuid\";\nimport { When } from \"react-if\";\nimport Lists from \"../List/list\";\nimport { LoginContext } from \"../auth/context\";\nimport \"./todo.scss\";\n\nconst ToDo = (props) => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const Settingsdata = useContext(SettingsContext);\n  const authcontext = useContext(LoginContext);\n\n  const StorageforComplete = JSON.parse(\n    localStorage.getItem(\"CompletedStatus\")\n  );\n\n  function setcomps() {\n\n    if (list.text!==\"text\"){\n\n      let complete = list.filter((item) => !item.complete);\n\n      Settingsdata.setcomplete(complete);\n      Settingsdata.setcomp(!Settingsdata.showcom);\n    }\n    \n  }\n\n  const [defaultValues] = useState({\n    difficulty: 4,\n  });\n  const { handleChange, handleSubmit } = useForm(addItem, defaultValues);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n\n \n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n \n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n\n  useEffect(() => {\n   \n    let incompleteCount = list.filter((item) => !item.complete).length;\n    localStorage.setItem(\n      \"iTemsPerPage\",\n      JSON.stringify(Settingsdata.numOfitems)\n    );\n    localStorage.setItem(\n      \"CompletedStatus\",\n      JSON.stringify(Settingsdata.showcom)\n    );\n    setIncomplete(incompleteCount);\n\n    document.title = `To Do List: ${incomplete}`;\n    console.log(\"list>>>\", list);\n\n  \n  }, [list, Settingsdata.numOfitems, Settingsdata.showcom]);\n\n  return (\n    <>\n      <When condition={authcontext.loginStatus}>\n        <div className=\"hideandseek\">\n          <div className=\"multi-button\">\n            <div>\n              <div>\n                <select\n                  onChange={(e) => {\n                    const tagetedd = e.target.value;\n                    Settingsdata.setnumOfitems(tagetedd);\n                  }}\n                  className=\"button\"\n                  id=\"copy\"\n                >\n                  <option value=\"3\" className=\"submit\">\n                    Items Per Page\n                  </option>\n\n                  <option className=\"submit\" value=\"4\">\n                    4\n                  </option>\n\n                  <option className=\"submit\" value=\"5\">\n                    5\n                  </option>\n\n                  <option className=\"submit\" value=\"6\">\n                    6\n                  </option>\n\n                  <option className=\"submit\" value=\"10\">\n                    10\n                  </option>\n                </select>\n\n                <button\n                  className=\"button\"\n                  id=\"cut\"\n                  onClick={authcontext.logoutFunction}\n                >\n                  <span> </span>\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"title\">Welcome {authcontext.user.username}</div>\n              <div className=\"subtitle\">\n                To Do List: {incomplete} items pending\n              </div>\n              <When\n                condition={\n                  authcontext.loginStatus &&\n                  authcontext.user.capabilities.includes(\"create\")\n                }\n              >\n                <div className=\"input-container ic1\">\n                  <input\n                    onChange={handleChange}\n                    id=\"firstname\"\n                    name=\"text\"\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                  <div className=\"cut\"></div>\n                  <label htmlFor=\"firstname\" className=\"placeholder\">\n                    To Do Item\n                  </label>\n                </div>\n\n                <div className=\"input-container ic2\">\n                  <input\n                    onChange={handleChange}\n                    name=\"assignee\"\n                    id=\"lastname\"\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                  <div className=\"cut\"></div>\n                  <label htmlFor=\"lastname\" className=\"placeholder\">\n                    Assigned To\n                  </label>\n                </div>\n                <label>\n                  <span>Difficulty</span>\n                  <input\n                    onChange={handleChange}\n                    defaultValue={defaultValues.difficulty}\n                    type=\"range\"\n                    min={1}\n                    max={5}\n                    name=\"difficulty\"\n                  />\n                </label>\n              </When>\n              <When\n                condition={\n                  authcontext.loginStatus &&\n                  authcontext.user.capabilities.includes(\"create\")\n                }\n              >\n                <button className=\"submit\" type=\"submit\">\n                  Add Item\n                </button>\n              </When>\n            </form>\n\n            <When\n              condition={\n                authcontext.loginStatus &&\n                authcontext.user.capabilities.includes(\"update\")\n              }\n            >\n              <button\n                className=\"submit\"\n                type=\"submit\"\n                onClick={() => setcomps(true)}\n              >\n                {!Settingsdata.showcom ? \"Show Pending Tasks\" : \"Show All\"}\n              </button>\n            </When>\n          </div>\n        </div>\n        <div className=\"displist\">\n          {(Settingsdata.showcom == false ? list : Settingsdata.complete)\n            .slice(Settingsdata.lastpage, Settingsdata.pagevisited)\n            .map((item) => (\n              <div className=\"lists\">\n                <div key={item.id}>\n                  <div className=\"form2\">\n                    <div key={item.id}>\n                      <p>{item.text}</p>\n\n                      <p>\n                        <small>Assigned to: {item.assignee}</small>\n                      </p>\n\n                      <p>\n                        <small>Difficulty: {item.difficulty}</small>\n                      </p>\n                      <div>Complete: {item.complete.toString()}</div>\n\n                      <hr />\n                    </div>\n\n                    <When\n                      condition={\n                        authcontext.loginStatus &&\n                        authcontext.user.capabilities.includes(\"update\")\n                      }\n                    >\n                      <button\n                        className=\"Complete\"\n                        onClick={() => toggleComplete(item.id)}\n                      >\n                        Complete\n                      </button>\n                    </When>\n\n                    <When\n                      condition={\n                        authcontext.loginStatus &&\n                        authcontext.user.capabilities.includes(\"delete\")\n                      }\n                    >\n                      <button\n                        className=\"delete\"\n                        onClick={() => deleteItem(item.id)}\n                      >\n                        Delete\n                      </button>\n                    </When>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n        <Lists totalposts={list.length} />\n      </When>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\r\nimport \"./nav.scss\"\r\nclass NavBar extends React.Component {\r\n\r\n\r\n\r\n  \r\n    render() {\r\n  \r\n     \r\n  \r\n      return (\r\n        <>\r\n\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavBar;\r\n  ","import React from \"react\";\nimport Login from \"./components/auth/login.js\";\n\nimport ToDo from \"./components/todo/todo.js\";\nimport { Settings } from \"./conText/settings.js\";\nimport LoginProvider from \"./components/auth/context\"\nimport NavBar from \"./components/navBar/navBar\"\nexport default function App() {\n  return (\n\n    <Settings>\n      <LoginProvider>\n      <Login/>\n\n      <ToDo />\n      </LoginProvider>\n    </Settings>\n\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}